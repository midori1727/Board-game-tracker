{"version":3,"sources":["components/Button/DefaultButton.jsx","frontPageImg.svg","components/FrontPage/FrontPage.jsx","components/Header/Header.jsx","components/Create/CreateNewGame.jsx","redux/actions/index.js","components/EditGame/EditGame.jsx","components/History/History.jsx","components/History/SingleHistory.jsx","App.js","reportWebVitals.js","redux/actions/types.js","redux/reducers/gameList.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["DefaultButton","props","id","onClick","ButtonName","FrontPage","className","src","Image","alt","to","Header","CreateNewGame","dispatch","useDispatch","history","useHistory","uuidv4","useState","title","setTitle","scenario","setScenario","member","setMember","points","setPoints","color","memberAndPoints","setMemberAndPoints","time","setTime","comment","setComment","createdDate","setCreatedDate","titleIsValid","setTitleIsValid","titleErrorMessage","setTitleErrorMessage","memberAndPointsIsValid","setMemberAndPointsIsValid","memberAndPointsErrorMessage","setMemberAndPointsErrorMessage","timeIsValid","setTimeIsValid","timeErrorMessage","setTimeErrorMessage","pointsIsValid","setPointsIsValid","pointsErrorMessage","setPointsErrorMessage","useEffect","now","Date","year","getFullYear","month","getMonth","slice","day","getDate","selectedColor","map","select","type","value","onChange","e","target","maxLength","preventDefault","match","item","index","style","name","newDataList","splice","removeMember","pointsAndMembersArray","addColor","handleChangeMemberColor","hidden","defaultValue","required","length","payload","gameData","push","EditGame","gameLists","useSelector","state","gameList","params","useParams","selectedHistory","filter","setColor","newMemberAndPointsList","colorArray","forEach","game","memberAndPoint","handleChangeTitle","handleChangeScenario","handleChangeTime","handleChangeComment","handleChangeCreated","editIndexPoints","handleChangePoints","goBack","includes","handleSubmit","History","Modal","setAppElement","SingleHistory","setId","isShowModal","setIsShowModal","isRemoved","setIsRemoved","handleEdit","isOpen","onRequestClose","overlayClassName","base","afterOpen","beforeClose","closeTimeoutMS","handleRemove","App","basename","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GAME_LIST_ADD","GAME_LIST_REMOVE","GAME_LIST_EDIT","initialState","action","newState","newEditState","reducer","combineReducers","Store","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.b2f42f40.chunk.js","sourcesContent":["import './DefaultButton.css';\r\n\r\nconst DefaultButton = (props) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<button id=\"Button\" onClick={props.onClick} >{props.ButtonName}</button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default DefaultButton;","export default __webpack_public_path__ + \"static/media/frontPageImg.c25e757f.svg\";","import { Link } from 'react-router-dom';\r\nimport DefaultButton from '../Button/DefaultButton';\r\nimport './FrontPage.css';\r\nimport Image from '../../frontPageImg.svg';\r\n\r\n\r\nconst FrontPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t<h1 className=\"title frontTitle\">Board Game Tracker</h1>\r\n\t\t<div className=\"FrontPageButton\">\r\n\t\t\t<div className=\"frontPageImg\">\r\n\t\t\t\t<img src={Image}  alt='frontPageImage' />\r\n\t\t\t</div>\r\n\t\t\t<Link to=\"/create\"><DefaultButton ButtonName=\"Create new game\"/></Link>\r\n\t\t\t<Link to=\"/history\"><DefaultButton ButtonName=\"History\"/></Link>\r\n\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default FrontPage;","import { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t<Link to=\"/\">&lt; Back to home</Link>\r\n\t\t</header>\r\n\t)\r\n};\r\n\r\nexport default Header;","import { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch} from 'react-redux';\r\nimport {gameListAddAction} from '../../redux/actions/index';\r\nimport './CreateNewGame.css';\r\nimport Header from '../Header/Header';\r\nimport DefaultButton from '../Button/DefaultButton';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst CreateNewGame = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst id = uuidv4();\r\n\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [scenario, setScenario] = useState('');\r\n\tconst [member, setMember] = useState('');\r\n\tconst [points, setPoints] = useState('');\r\n\tconst color = useState('white');\r\n\tconst [memberAndPoints, setMemberAndPoints] = useState([]);\r\n\tconst [time, setTime] = useState('');\r\n\tconst [comment, setComment] = useState('');\r\n\tconst [createdDate, setCreatedDate] = useState('');\r\n\r\n\t// validation\r\n\tconst [ titleIsValid, setTitleIsValid ] = useState(true);\r\n\tconst [ titleErrorMessage, setTitleErrorMessage ] = useState('');\r\n\tconst [ memberAndPointsIsValid, setMemberAndPointsIsValid ] = useState(true);\r\n\tconst [ memberAndPointsErrorMessage, setMemberAndPointsErrorMessage ] = useState(true);\r\n\tconst [ timeIsValid, setTimeIsValid ] = useState(true);\r\n\tconst [ timeErrorMessage, setTimeErrorMessage ] = useState('');\r\n\tconst [ pointsIsValid, setPointsIsValid ] = useState(true);\r\n\tconst [ pointsErrorMessage, setPointsErrorMessage ] = useState('');\r\n\r\n\tuseEffect (() => {\r\n\t\tconst now = new Date();\r\n\t\tconst year = now.getFullYear();\r\n\t\tlet month = (\"0\"+(now.getMonth() + 1)).slice(-2);\r\n\t\tlet day =  (\"0\"+now.getDate()).slice(-2);\r\n\t\tconst createdDate = `${year}-${month}-${day}`;\r\n\t\tsetCreatedDate(createdDate);\r\n\t},[]);\r\n\r\n\tconst handleChangeTitle = (e) => {\r\n\t\tsetTitle(e.target.value);\r\n\t\tsetTitleIsValid(true);\r\n\t};\r\n\r\n\tconst handleChangeScenario = (e) => {\r\n\t\tsetScenario(e.target.value);\r\n\t};\r\n\r\n\tconst handleChangeMember = (e) => {\r\n\t\tsetMember(e.target.value);\r\n\t};\r\n\r\n\tconst handleChangePoints = (e) => {\r\n\t\tsetPoints(e.target.value);\r\n\t\tsetPointsIsValid(true);\r\n\t};\r\n\r\n\tconst handleChangeTime = (e) => {\r\n\t\tsetTime(e.target.value);\r\n\t\tsetTimeIsValid(true);\r\n\t};\r\n\r\n\tconst handleChangeComment  = (e) => {\r\n\t\tsetComment(e.target.value);\r\n\t};\r\n\r\n\tconst handleCreatedDate = (e) => {\r\n\t\tsetCreatedDate(e.target.value);\r\n\t}\r\n\r\n\tconst handleChangeMemberColor = (e, index) => {\r\n\t\tlet pointsAndMembersArray = [...memberAndPoints];\r\n\t\tlet addColor =  pointsAndMembersArray[index].color;\r\n\t\taddColor = e.target.value;\r\n\t\tpointsAndMembersArray[index].color = addColor;\r\n\t\tsetMemberAndPoints(pointsAndMembersArray);\r\n\t}\r\n\r\n\tconst addMember = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif(member === '' || points === '') return;\r\n\t\tif(points.match(/[^0-9]+/)){\r\n\t\t\tsetPointsIsValid(false);\r\n\t\t\tsetPointsErrorMessage('Please only use digit');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetMemberAndPoints([...memberAndPoints, { 'name': member, 'points': points, 'color': color}]);\r\n\t\tsetMember('');\r\n\t\tsetPoints('');\r\n\t\tsetMemberAndPointsIsValid(true);\r\n\t};\r\n\r\n\tconst removeMember = (index) => {\r\n\t\tlet newDataList = [...memberAndPoints];\r\n\t\tnewDataList.splice(index,1);\r\n\t\tsetMemberAndPoints(newDataList);\r\n\t};\r\n\r\n\tconst selectedColor = memberAndPoints.map((select) => {\r\n\t\treturn select.color;\r\n\t})\r\n\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\r\n\t\tif(!title) {\r\n\t\t\tsetTitleIsValid(false);\r\n\t\t\tsetTitleErrorMessage('Please input title');\r\n\t\t\treturn;\r\n\t\t}else if (memberAndPoints.length === 0){\r\n\t\t\tsetMemberAndPointsIsValid(false);\r\n\t\t\tsetMemberAndPointsErrorMessage('Please add at least one player');\r\n\t\t\treturn;\r\n\t\t}else if(!time) {\r\n\t\t\tsetTimeIsValid(false);\r\n\t\t\tsetTimeErrorMessage('Please input total time');\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tdispatch(gameListAddAction( {\r\n\t\t\t\tid: id,\r\n\t\t\t\ttitle: title,\r\n\t\t\t\tscenario: scenario,\r\n\t\t\t\tmemberAndPoints: memberAndPoints,\r\n\t\t\t\ttime: time,\r\n\t\t\t\tcomment: comment,\r\n\t\t\t\tcreatedDate: createdDate\r\n\t\t\t}));\r\n\t\t}\r\n\t\thistory.push('/history');\r\n\t};\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t<header>\r\n\t\t\t<Header />\r\n\t\t</header>\r\n\t\t<h1 className=\"title\">Create New Game</h1>\r\n\t\t<div className=\"createNewGameWrapper\">\r\n\t\t\t<form className=\"createNewGameForm\">\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<h2 className=\"createNewGameH2\" >Title:</h2>\r\n\t\t\t\t\t<input className=\"inputTitle\" type=\"text\" value={title} onChange={handleChangeTitle}  />\r\n\t\t\t\t\t{!titleIsValid\r\n\t\t\t\t\t&&\r\n\t\t\t\t\t<div className=\"error-message\">\r\n\t\t\t\t\t\t{titleErrorMessage}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<h2 className=\"createNewGameH2\" >Scenario:</h2>\r\n\t\t\t\t\t<textarea className=\"inputScenario\" value={scenario} onChange={handleChangeScenario} />\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<h2 className=\"createNewGameH2\" >Player:</h2>\r\n\t\t\t\t\t<input type=\"text\" value={member} maxLength=\"30\" onChange={handleChangeMember}/>\r\n\t\t\t\t\t{!memberAndPointsIsValid\r\n\t\t\t\t\t&&\r\n\t\t\t\t\t<div className=\"error-message\">\r\n\t\t\t\t\t\t{memberAndPointsErrorMessage}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<h2 className=\"createNewGameH2\" >Points:</h2>\r\n\t\t\t\t\t<input type=\"text\" value={points} onChange={handleChangePoints} />\r\n\t\t\t\t\t{!pointsIsValid\r\n\t\t\t\t\t&&\r\n\t\t\t\t\t<div className=\"error-message\">\r\n\t\t\t\t\t\t{pointsErrorMessage}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<button className=\"addMemberButton\" onClick={addMember}>+ Add</button>\r\n\r\n\t\t\t\t{memberAndPoints &&\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{memberAndPoints.map((item, index) => (\r\n\t\t\t\t\t\t<div key={index} style={{ color: selectedColor[index]}}>\r\n\t\t\t\t\t\t\t{item.name} {item.points} points\r\n\t\t\t\t\t\t\t<button className=\"removeButton\" onClick={ () => removeMember(index)}>Remove</button>\r\n\t\t\t\t\t\t\t<select name=\"memberColor\" className=\"selectColor\" onChange={(e)=>handleChangeMemberColor(e,index)}>\r\n\t\t\t\t\t\t\t\t<option value=\"\" hidden>Change color</option>\r\n\t\t\t\t\t\t\t\t<option defaultValue=\"white\">White</option>\r\n\t\t\t\t\t\t\t\t<option value=\"rgb(250, 84, 84)\" >Red</option>\r\n\t\t\t\t\t\t\t\t<option value=\"lightblue\">Blue</option>\r\n\t\t\t\t\t\t\t\t<option value=\"lightgreen\">Green</option>\r\n\t\t\t\t\t\t\t\t<option value=\"yellow\">Yellow</option>\r\n\t\t\t\t\t\t\t\t<option value=\"#FF8574\">Orange</option>\r\n\t\t\t\t\t\t\t\t<option value=\"pink\">Pink</option>\r\n\t\t\t\t\t\t\t\t<option value=\"lightgray\">Gray</option>\r\n\t\t\t\t\t\t\t\t<option value=\"rgb(207, 98, 207)\">Purple</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<h2 className=\"createNewGameH2\" >Total time:</h2>\r\n\t\t\t\t\t<input type=\"time\" value={time} onChange={handleChangeTime}/>\r\n\t\t\t\t\t{!timeIsValid\r\n\t\t\t\t\t&&\r\n\t\t\t\t\t<div className=\"error-message\">\r\n\t\t\t\t\t\t{timeErrorMessage}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<label>\r\n\t\t\t\t\t<h2 className=\"createNewGameH2\" >Comment:</h2>\r\n\t\t\t\t\t<textarea className=\"inputComment\" value={comment} onChange={handleChangeComment}　required />\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<label >\r\n\t\t\t\t<h2 className=\"createNewGameH2\" >Created date:</h2>\r\n\t\t\t\t\t<input type=\"date\" value={createdDate} name='createdDate' onChange={handleCreatedDate}/>\r\n\t\t\t\t</label>\r\n\r\n\t\t\t\t<div className=\"addButton\">\r\n\t\t\t\t\t<DefaultButton ButtonName=\"ADD GAME\" onClick={handleSubmit} />\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default CreateNewGame;","export const gameListAddAction = (gameData) => {\r\n\treturn {\r\n\t\ttype: \"GAME_LIST_ADD\",\r\n\t\tpayload: {\r\n\t\t\tid: gameData.id,\r\n\t\t\ttitle: gameData.title,\r\n\t\t\tscenario: gameData.scenario,\r\n\t\t\tmemberAndPoints: gameData.memberAndPoints,\r\n\t\t\ttime: gameData.time,\r\n\t\t\tcomment: gameData.comment,\r\n\t\t\tcreatedDate: gameData.createdDate\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport const gameListRemoveAction = (gameData) => {\r\n\treturn {\r\n\t\ttype: \"GAME_LIST_REMOVE\",\r\n\t\tpayload: {\r\n\t\t\tid: gameData.id\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport const gameListEditAction = (gameData) => {\r\n\treturn {\r\n\t\ttype: \"GAME_LIST_EDIT\",\r\n\t\tpayload: {\r\n\t\t\tid: gameData.id,\r\n\t\t\ttitle: gameData.title,\r\n\t\t\tscenario: gameData.scenario,\r\n\t\t\tmemberAndPoints: gameData.memberAndPoints,\r\n\t\t\ttime: gameData.time,\r\n\t\t\tcomment: gameData.comment,\r\n\t\t\tcreatedDate: gameData.createdDate\r\n\t\t}\r\n\t}\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport './EditGame.css';\r\nimport Header from '../Header/Header';\r\nimport DefaultButton from '../Button/DefaultButton';\r\nimport { gameListEditAction } from '../../redux/actions';\r\n\r\nconst EditGame = () => {\r\n\r\n\tconst selector = useSelector( (state) => state);\r\n\tconst gameLists = selector.gameList.gameLists;\r\n\tconst params = useParams();\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst selectedHistory = gameLists.filter(gameList => {\r\n\t\treturn gameList.id === params.id;\r\n\t});\r\n\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [scenario, setScenario] = useState('');\r\n\tconst [color, setColor] = useState([]);\r\n\tconst [memberAndPoints, setMemberAndPoints] = useState([]);\r\n\tconst [time, setTime] = useState('');\r\n\tconst [comment, setComment] = useState('');\r\n\tconst [createdDate, setCreatedDate] = useState('');\r\n\tlet newMemberAndPointsList = [];\r\n\tlet colorArray = [];\r\n\r\n\t// validation\r\n\tconst [ titleIsValid, setTitleIsValid ] = useState(true);\r\n\tconst [ titleErrorMessage, setTitleErrorMessage ] = useState('');\r\n\tconst [ timeIsValid, setTimeIsValid ] = useState(true);\r\n\tconst [ timeErrorMessage, setTimeErrorMessage ] = useState('');\r\n\r\n\tuseEffect (() => {\r\n\t\tselectedHistory.forEach(game => {\r\n\t\t\tsetTitle(game.title);\r\n\t\t\tsetScenario(game.scenario);\r\n\t\t\tsetTime(game.time);\r\n\t\t\tsetComment(game.comment)\r\n\t\t\tsetCreatedDate(game.createdDate);\r\n\t\t\tgame.memberAndPoints.forEach((memberAndPoint) => {\r\n\t\t\t\tnewMemberAndPointsList = [...newMemberAndPointsList, { 'name' : memberAndPoint.name, 'points' :memberAndPoint.points, 'color' : memberAndPoint.color}];\r\n\t\t\t\tsetMemberAndPoints(newMemberAndPointsList);\r\n\t\t\t\tcolorArray = [...colorArray, memberAndPoint.color];\r\n\t\t\t\tsetColor(colorArray);\r\n\t\t\t})\t\r\n\t\t})\r\n\t},[])\r\n\r\n\tconst handleChangeTitle = (e) => {\r\n\t\tsetTitle(e.target.value);\r\n\t\tsetTitleIsValid(true);\r\n\t};\r\n\r\n\tconst handleChangeScenario = (e) => {\r\n\t\tsetScenario(e.target.value);\r\n\t};\r\n\r\n\tconst handleChangePoints = (e,index) => {\r\n\t\tlet pointsAndMembersArray = [...memberAndPoints];\r\n\t\tlet editIndexPoints =  pointsAndMembersArray[index].points;\r\n\t\teditIndexPoints = e.target.value;\r\n\t\tpointsAndMembersArray[index].points = editIndexPoints;\r\n\t\tif(editIndexPoints.match(/[^0-9]+/)) return\r\n\t\tsetMemberAndPoints(pointsAndMembersArray);\r\n\t};\r\n\r\n\tconst handleChangeTime = (e) => {\r\n\t\tsetTime(e.target.value);\r\n\t\tsetTimeIsValid(true);\r\n\t};\r\n\r\n\tconst handleChangeComment = (e) => {\r\n\t\tsetComment(e.target.value);\r\n\t};\r\n\r\n\tconst handleChangeCreated = (e) => {\r\n\t\tsetCreatedDate(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (id) => {\r\n\r\n\t\tconst pointsArray = \r\n\t\tmemberAndPoints.map((memberAndPoint) => {\r\n\t\t\treturn memberAndPoint.points;\r\n\t\t})\r\n\r\n\t\tconst checkPointsSubmit = pointsArray.includes('');\r\n\r\n\t\tif(checkPointsSubmit) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!title) {\r\n\t\t\tsetTitleIsValid(false);\r\n\t\t\tsetTitleErrorMessage('Please input title');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(!time) {\r\n\t\t\tsetTimeIsValid(false);\r\n\t\t\tsetTimeErrorMessage('Please input total time');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\tdispatch(gameListEditAction( {\r\n\t\t\tid: id,\r\n\t\t\ttitle: title,\r\n\t\t\tscenario: scenario,\r\n\t\t\tmemberAndPoints: memberAndPoints,\r\n\t\t\ttime: time,\r\n\t\t\tcomment: comment,\r\n\t\t\tcreatedDate: createdDate\r\n\t\t}));\r\n\t\thistory.push('/history');\r\n\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<header>\r\n\t\t\t<Header />\r\n\t\t</header>\r\n\t\t<h1 className=\"title\">Edit Game</h1>\r\n\t\t<div className=\"editGameWrapper\">\r\n\t\t\t<div className=\"editGameForm\">\r\n\t\t\t\t{selectedHistory.map((gameList) => (\r\n\t\t\t\t\t<div key={gameList.id} >\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<h2 className=\"editGameH2\">Title:</h2>\r\n\t\t\t\t\t\t\t<input className=\"editTitle\" value={title} onChange={handleChangeTitle}/>\r\n\t\t\t\t\t\t\t{!titleIsValid\r\n\t\t\t\t\t\t\t&&\r\n\t\t\t\t\t\t\t<div className=\"error-message\">\r\n\t\t\t\t\t\t\t\t{titleErrorMessage}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<h2 className=\"editGameH2\">Scenario:</h2>\r\n\t\t\t\t\t\t\t<textarea className=\"editScenario\" value={scenario} onChange={handleChangeScenario}/>\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<h2 className=\"editGameH2\">Members:</h2>\r\n\t\t\t\t\t\t{color && \r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{gameList.memberAndPoints.map((memberAndPoint,index) => (\r\n\t\t\t\t\t\t\t\t<div key={index} className=\"EditmemberAndPoints\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"editName\" style={{ color: color[index]}}>{memberAndPoint.name}</p>\r\n\t\t\t\t\t\t\t\t\t{memberAndPoints.length >= 1 && \r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<input value={memberAndPoints[index].points}  onChange={(e) => handleChangePoints(e,index)} />\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{memberAndPoints.length >= 1 && memberAndPoints[index].points === ''\r\n\t\t\t\t\t\t\t\t\t&&\r\n\t\t\t\t\t\t\t\t\t<div className=\"error-message points-error-message\">\r\n\t\t\t\t\t\t\t\t\t\tPlease input points\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<h2 className=\"editGameH2\">Total Time:</h2>\r\n\t\t\t\t\t\t\t<input type='time' value={time} onChange={handleChangeTime}/>\r\n\t\t\t\t\t\t\t{!timeIsValid\r\n\t\t\t\t\t\t\t&&\r\n\t\t\t\t\t\t\t<div className=\"error-message\">\r\n\t\t\t\t\t\t\t\t{timeErrorMessage}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<h2 className=\"editGameH2\">Comment:</h2>\r\n\t\t\t\t\t\t\t<textarea className=\"editComment\" value={comment} onChange={handleChangeComment}/>\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<h2 className=\"editGameH2\">Created Date:</h2>\r\n\t\t\t\t\t\t\t<input type='date' value={createdDate} onChange={handleChangeCreated}/>\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<div className=\"editButton\">\r\n\t\t\t\t\t\t\t<DefaultButton ButtonName=\"CANCEL\" onClick={()=>history.goBack()} />\r\n\t\t\t\t\t\t\t<DefaultButton ButtonName=\"SAVE\" onClick={() => handleSubmit(gameList.id)} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default EditGame;","import {useSelector} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './History.css';\r\nimport Header from '../Header/Header';\r\n\r\nconst History = () => {\r\n\r\n\tconst selector = useSelector( (state) => state);\r\n\tconst gameLists = selector.gameList.gameLists;\r\n\tconst history = useHistory();\r\n\t\r\n\tconst handleClick = (id) => {\r\n\t\thistory.push('/history/'+id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<header>\r\n\t\t\t<Header />\r\n\t\t</header>\r\n\t\t<h1 className=\"title\">History</h1>\r\n\t\t\r\n\t\t<div className=\"gameListsWrapper\">\r\n\t\t\t<div className=\"gameLists\">\r\n\t\t\t\t{gameLists.map((gameList) => (\r\n\t\t\t\t\t<div key={gameList.id} className=\"gameListCard\" onClick={()=>handleClick(gameList.id)}>\r\n\t\t\t\t\t\t<h1>{gameList.title}</h1>\r\n\t\t\t\t\t\t<p >{gameList.scenario}</p>\r\n\t\t\t\t\t\t<p>Created: {gameList.createdDate}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default History;\r\n","import { useSelector, useDispatch} from 'react-redux';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\nimport {gameListRemoveAction} from '../../redux/actions/index';\r\nimport './SingleHistory.css';\r\nimport DefaultButton from '../Button/DefaultButton';\r\nimport { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst SingleHistory = () => {\r\n\r\n\tconst selector = useSelector( (state) => state);\r\n\tconst gameLists = selector.gameList.gameLists;\r\n\tconst params = useParams();\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tconst [id, setId] = useState('');\r\n\tconst [color, setColor] = useState([]);\r\n\tconst [isShowModal, setIsShowModal] = useState(false);\r\n\tconst [isRemoved, setIsRemoved] = useState(false);\r\n\tlet colorArray = [];\r\n\r\n\tconst selectedHistory = gameLists.filter(gameList => {\r\n\t\treturn gameList.id === params.id;\r\n\t});\r\n\r\n\tuseEffect (() => {\r\n\t\tselectedHistory.forEach(gameList => {\r\n\t\t\tsetId(gameList.id)\r\n\t\t\tgameList.memberAndPoints.forEach((memberAndPoint)=> {\r\n\t\t\t\tcolorArray = [...colorArray, memberAndPoint.color];\r\n\t\t\t\tsetColor(colorArray);\r\n\t\t\t})\r\n\t\t})\r\n\t},[])\r\n\r\n\tconst handleRemove = (id) => {\r\n\t\tdispatch(gameListRemoveAction( {\r\n\t\t\tid: id,\r\n\t\t}));\r\n\t\tsetIsShowModal(false);\r\n\t\tsetIsRemoved(true);\r\n\t};\r\n\r\n\tconst handleEdit = (id) => {\r\n\t\thistory.push('/edit/'+id);\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tsetIsShowModal(false);\r\n\t\tsetIsRemoved(false);\r\n\t\thistory.push('/history');\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetIsRemoved(false);\r\n\t\thistory.push('/history');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<header>\r\n\t\t\t<Header />\r\n\t\t</header>\r\n\t\t<h1 className=\"title\">History</h1>\r\n\t\t<div className=\"gameDetailsWrapper\">\r\n\t\t\t{selectedHistory.map((gameList) => (\r\n\t\t\t\t\t<div className=\"gameDetails\" key={gameList.id} >\r\n\t\t\t\t\t\t<h1 >{gameList.title}</h1>\r\n\t\t\t\t\t\t<p className=\"gameDetailsScenario\">Scenario: {gameList.scenario}</p>\r\n\t\t\t\t\t\t{color && \r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{gameList.memberAndPoints.map((memberAndPoint,index) => (\r\n\t\t\t\t\t\t\t<div className=\"gameMemberAndPoints\" key={index} >\r\n\t\t\t\t\t\t\t\t<p style={{ color: color[index]}}>{memberAndPoint.name}</p>\r\n\t\t\t\t\t\t\t\t<p style={{ color: color[index]}}>{memberAndPoint.points} Points</p>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<p className=\"gameTotalTime\">Total Time: {gameList.time}</p>\r\n\t\t\t\t\t\t<p className=\"gameComment\">Comment: {gameList.comment}</p>\r\n\t\t\t\t\t\t<p className=\"gameCreatedDate\">Created Date: {gameList.createdDate}</p>\r\n\t\t\t\t\t\t<DefaultButton ButtonName=\"REMOVE\" onClick={() => setIsShowModal(true)} />\r\n\t\t\t\t\t\t<DefaultButton ButtonName=\"EDIT\" onClick={()=> handleEdit(gameList.id)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t< Modal isOpen={isShowModal}　\r\n\t\t\t\t\t\tonRequestClose={() => setIsShowModal(false)}\r\n\t\t\t\t\t\toverlayClassName={{\r\n\t\t\t\t\t\t\tbase: \"overlay-base\",\r\n\t\t\t\t\t\t\tafterOpen: \"overlay-after\",\r\n\t\t\t\t\t\t\tbeforeClose: \"overlay-before\"\r\n\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t  className={{\r\n\t\t\t\t\t\t\tbase: \"content-base\",\r\n\t\t\t\t\t\t\tafterOpen: \"content-after\",\r\n\t\t\t\t\t\t\tbeforeClose: \"content-before\"\r\n\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t  closeTimeoutMS={500}>\r\n\t\t\t\t\t<p >Do you really want to remove this game?</p>\r\n\t\t\t\t\t<DefaultButton ButtonName=\"REMOVE\" onClick={()=> handleRemove(id)} />\r\n\t\t\t\t\t<DefaultButton ButtonName=\"CANCEL\" onClick={() => setIsShowModal(false)} />\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t< Modal isOpen={isRemoved}　\r\n\t\t\t\t\t\tonRequestClose={handleClose}\r\n\t\t\t\t\t\toverlayClassName={{\r\n\t\t\t\t\t\t\tbase: \"overlay-base\",\r\n\t\t\t\t\t\t\tafterOpen: \"overlay-after\",\r\n\t\t\t\t\t\t\tbeforeClose: \"overlay-before\"\r\n\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t  className={{\r\n\t\t\t\t\t\t\tbase: \"content-base\",\r\n\t\t\t\t\t\t\tafterOpen: \"content-after\",\r\n\t\t\t\t\t\t\tbeforeClose: \"content-before\"\r\n\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t  closeTimeoutMS={500}>\r\n\t\t\t\t\t<p >Removed</p>\r\n\t\t\t\t\t<DefaultButton ButtonName=\"BACK TO HISTORY\" onClick={handleConfirm} />\r\n\t\t\t\t</Modal>\r\n\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SingleHistory;","import './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport FrontPage from './components/FrontPage/FrontPage';\nimport CreateNewGame from './components/Create/CreateNewGame';\nimport EditGame from './components/EditGame/EditGame';\nimport History from './components/History/History';\nimport SingleHistory from './components/History/SingleHistory';\n\nfunction App() {\n\t\n\treturn (\n\t\t<HashRouter basename=\"/\">\n\t\t\t<div className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/create\" component={CreateNewGame} />\n\t\t\t\t\t<Route path=\"/edit/:id\" component={EditGame} />\n\t\t\t\t\t<Route path=\"/history/:id\" component={SingleHistory} />\n\t\t\t\t\t<Route path=\"/history\" component={History} />\n\t\t\t\t\t<Route exact path=\"/\" component={FrontPage} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</HashRouter>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const GAME_LIST_ADD = 'GAME_LIST_ADD';\r\nexport const GAME_LIST_REMOVE = 'GAME_LIST_REMOVE';\r\nexport const GAME_LIST_EDIT = 'GAME_LIST_EDIT';\r\n","import {GAME_LIST_ADD, GAME_LIST_REMOVE, GAME_LIST_EDIT} from '../actions/types';\r\n\r\nconst initialState = {\r\n\tgameLists: []\r\n};\r\n\r\nconst gameList = (state = initialState, action) => {\r\n\tswitch (action.type){\r\n\t\tcase GAME_LIST_ADD:\r\n\t\t\treturn {\r\n                ...state,\r\n                gameLists: [...state.gameLists, action.payload]\r\n            }\r\n\t\t\t\r\n\t\tcase GAME_LIST_REMOVE:\r\n\t\t\tconst newState = state.gameLists.filter(game => game.id !== action.payload.id );\r\n\t\t\treturn {\r\n\t\t\t\tgameLists: newState\r\n            }\r\n\r\n\t\tcase GAME_LIST_EDIT:\r\n\t\t\tconst newEditState = state.gameLists.map(game => game.id === action.payload.id ? action.payload : game);\r\n\t\t\treturn {\r\n                gameLists: newEditState\r\n\t\t\t}\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n};\r\n\r\nexport default gameList;","import { combineReducers } from \"redux\";\r\nimport gameList from './gameList';\r\n\r\nconst reducer = combineReducers({gameList});\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from '../reducers/index';\r\n\r\nconst Store = createStore(reducer);\r\n\r\nexport default Store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './redux/store/index';\nimport {Provider} from 'react-redux';\n\n\n\nReactDOM.render(\n\t<Provider store={Store}>\n\t\t<App />\n\t</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}